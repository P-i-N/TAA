/****************************************************************************************************************
/__/\\\\\\\\\\\\\\\_____/\\\\\\\\\________/\\\\\\\\\____________/                                               |
/__\///////\\\/////____/\\\\\\\\\\\\\____/\\\\\\\\\\\\\_________/   Callum James Glover                         |
/_________\/\\\________/\\\/////////\\\__/\\\/////////\\\_______/   NCCA, Bournemouth University                |
/__________\/\\\_______\/\\\_______\/\\\_\/\\\_______\/\\\______/   s4907224@bournemouth.ac.uk                  |
/___________\/\\\_______\/\\\\\\\\\\\\\\\_\/\\\\\\\\\\\\\\\_____/   callum@glovefx.com                          |
/____________\/\\\_______\/\\\/////////\\\_\/\\\/////////\\\____/   07946 750075                                |
/_____________\/\\\_______\/\\\_______\/\\\_\/\\\_______\/\\\___/   Level 6 Computing for Animation Project     |
/______________\/\\\_______\/\\\_______\/\\\_\/\\\_______\/\\\__/   https://github.com/NCCA/CA1-2018-s4907224   |
/_______________\///________\///________\///__\///________\///__/                                               |
****************************************************************************************************************/
//---------------------------------------------------------------------------------------------------------------
/// @file shaderhandler.cpp
/// @brief Handles and stores shader properties.
//---------------------------------------------------------------------------------------------------------------
#include "shaderhandler.h"
//---------------------------------------------------------------------------------------------------------------
/// @brief Simple constructor for shader properties.
//---------------------------------------------------------------------------------------------------------------
ShaderProps::ShaderProps(glm::vec3 _diffuseColour,
                         glm::vec3 _specularColour,
                         float _roughness,
                         float _metallic,
                         float _diffuseWeight,
                         float _specularWeight,
                         float _alpha,
                         int _texture)
                         :
                         m_diffuseColour (_diffuseColour),
                         m_specularColour (_specularColour),
                         m_roughness (_roughness),
                         m_metallic (_metallic),
                         m_diffuseWeight (_diffuseWeight),
                         m_specularWeight (_specularWeight),
                         m_alpha (_alpha),
                         m_diffuseTex (_texture)
{}
//---------------------------------------------------------------------------------------------------------------
/// @brief Default destructor.
//---------------------------------------------------------------------------------------------------------------
ShaderProps::~ShaderProps() = default;
